services:
  # Infrastructure
  postgresql:
    container_name: postgresql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: shehan17
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - spring-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - spring-network
    restart: unless-stopped
    depends_on:
      - postgresql

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - spring-network
    restart: unless-stopped

  # Microservices
  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      - spring-network
    restart: unless-stopped

  discovery:
    build: ./discovery
    container_name: discovery
    ports:
      - "8761:8761"
    networks:
      - spring-network
    depends_on:
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  gateway:
    build: ./gateway
    container_name: gateway
    ports:
      - "8222:8222"
    networks:
      - spring-network
    depends_on:
      - discovery
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  schools:
    build: ./schools
    container_name: schools
    ports:
      - "8070:8070"
    networks:
      - spring-network
    depends_on:
      - postgresql
      - discovery
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  students:
    build: ./students
    container_name: students
    ports:
      - "8090:8090"
    networks:
      - spring-network
    depends_on:
      - postgresql
      - discovery
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  attendance:
    build: ./attendance
    container_name: attendance
    ports:
      - "8060:8060"
    networks:
      - spring-network
    depends_on:
      - postgresql
      - discovery
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

  facial-recognition:
    build: ./facial-recognition
    container_name: facial-recognition
    ports:
      - "8050:8050"
    networks:
      - spring-network
    depends_on:
      - postgresql
      - discovery
      - config-server
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    restart: unless-stopped

networks:
  spring-network:
    driver: bridge

volumes:
  postgres:
  pgadmin: